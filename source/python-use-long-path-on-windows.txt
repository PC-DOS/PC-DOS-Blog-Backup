在Windows中，默认存在长度为260字符的{{MAX_PATH}}限制，这会导致较长的路径无法正常操作。产生如“找不到文件”等错误。

对于Windows 10版本1607及以上，可以通过将注册表键{{HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem}}中的DWORD值{{LongPathsEnabled}}设为{{@@1@@}}的方式，直接支持NTFS长路径：

[[code]]
Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem]
"LongPathsEnabled"=dword:00000001
[[/code]]

对于较低版本的Windows，可以通过将路径替换为完整路径的Unicode版本实现。Unicode版本的路径以“{{\\?\}}”开头，后方所有的目录或文件项之间必须使用反斜杠（“{{\}}”）分隔。类似“{{\\?\D:\Python Projects\LongPathDemo\Output\}}”可以使用{{sys.platform}}属性确定当前系统是否为Windows：

[[code type="python"]]
import sys

# Convert full path to Windows Unicode path
# Inorder to by pass Windows long path limitation
# Ref. https://learn.microsoft.com/zh-cn/windows/win32/fileio/maximum-file-path-limitation
def ConvertPathToWindowsUncodePath(sPathString : str, IsPlatformCheckingsBypassed : bool = False) -> str :
    # By default, this function only works on Windows
    # Only when IsPlatformCheckingsBypassed is set to True explicitly
    # On other platforms, will return the given path string with no modification
    sProcessedPath = sPathString
    if sys.platform.lower().startswith("win") or IsPlatformCheckingsBypassed :
        sProcessedPath = sProcessedPath.replace("/", "\\")
        sProcessedPath = "\\\\?\\" + sProcessedPath
    #End If
    return sProcessedPath
#End Function
[[/code]]

参考资料：

*https://learn.microsoft.com/zh-cn/windows/win32/fileio/maximum-file-path-limitation

*https://www.cnblogs.com/babashi9527/p/17474480.html