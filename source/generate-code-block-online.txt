+ 网站

*https://highlightcode.com/

*http://www.planetb.ca/syntax-highlight-word

*https://tool.oschina.net/highlight

推荐使用Internet Explorer访问。

+ 样例

[[html]]
<style>
	@font-face {
		font-family: 'iconfont';  /* project id 2221353 */
		src: url('//at.alicdn.com/t/font_2221353_lfmkn4tq01.eot');
		src: url('//at.alicdn.com/t/font_2221353_lfmkn4tq01.eot?#iefix') format('embedded-opentype'),
		url('//at.alicdn.com/t/font_2221353_lfmkn4tq01.woff2') format('woff2'),
		url('//at.alicdn.com/t/font_2221353_lfmkn4tq01.woff') format('woff'),
		url('//at.alicdn.com/t/font_2221353_lfmkn4tq01.ttf') format('truetype'),
		url('//at.alicdn.com/t/font_2221353_lfmkn4tq01.svg#iconfont') format('svg');
	}
	.iconfont{
		font-family:"iconfont" !important;
		font-size:16px;font-style:normal;
		-webkit-font-smoothing: antialiased;
		-webkit-text-stroke-width: 0.2px;
		-moz-osx-font-smoothing: grayscale;}
</style>
<style>
        @import url('https://tool.oschina.net/js/syntaxhighlighter_3.0.83/styles/shCoreDefault.css')
</style>
<div><div id="highlighter_55423" class="syntaxhighlighter  c"><div class="toolbar"><span><a href="#" class="toolbar_item command_help help">?</a></span></div><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div><div class="line number34 index33 alt1">34</div><div class="line number35 index34 alt2">35</div><div class="line number36 index35 alt1">36</div><div class="line number37 index36 alt2">37</div><div class="line number38 index37 alt1">38</div><div class="line number39 index38 alt2">39</div><div class="line number40 index39 alt1">40</div><div class="line number41 index40 alt2">41</div><div class="line number42 index41 alt1">42</div><div class="line number43 index42 alt2">43</div><div class="line number44 index43 alt1">44</div><div class="line number45 index44 alt2">45</div><div class="line number46 index45 alt1">46</div><div class="line number47 index46 alt2">47</div><div class="line number48 index47 alt1">48</div><div class="line number49 index48 alt2">49</div><div class="line number50 index49 alt1">50</div><div class="line number51 index50 alt2">51</div><div class="line number52 index51 alt1">52</div><div class="line number53 index52 alt2">53</div><div class="line number54 index53 alt1">54</div><div class="line number55 index54 alt2">55</div><div class="line number56 index55 alt1">56</div><div class="line number57 index56 alt2">57</div><div class="line number58 index57 alt1">58</div><div class="line number59 index58 alt2">59</div><div class="line number60 index59 alt1">60</div><div class="line number61 index60 alt2">61</div><div class="line number62 index61 alt1">62</div><div class="line number63 index62 alt2">63</div><div class="line number64 index63 alt1">64</div><div class="line number65 index64 alt2">65</div><div class="line number66 index65 alt1">66</div><div class="line number67 index66 alt2">67</div><div class="line number68 index67 alt1">68</div><div class="line number69 index68 alt2">69</div><div class="line number70 index69 alt1">70</div><div class="line number71 index70 alt2">71</div><div class="line number72 index71 alt1">72</div><div class="line number73 index72 alt2">73</div><div class="line number74 index73 alt1">74</div><div class="line number75 index74 alt2">75</div><div class="line number76 index75 alt1">76</div><div class="line number77 index76 alt2">77</div><div class="line number78 index77 alt1">78</div><div class="line number79 index78 alt2">79</div><div class="line number80 index79 alt1">80</div><div class="line number81 index80 alt2">81</div><div class="line number82 index81 alt1">82</div><div class="line number83 index82 alt2">83</div><div class="line number84 index83 alt1">84</div><div class="line number85 index84 alt2">85</div><div class="line number86 index85 alt1">86</div><div class="line number87 index86 alt2">87</div><div class="line number88 index87 alt1">88</div><div class="line number89 index88 alt2">89</div><div class="line number90 index89 alt1">90</div><div class="line number91 index90 alt2">91</div><div class="line number92 index91 alt1">92</div><div class="line number93 index92 alt2">93</div><div class="line number94 index93 alt1">94</div><div class="line number95 index94 alt2">95</div><div class="line number96 index95 alt1">96</div><div class="line number97 index96 alt2">97</div><div class="line number98 index97 alt1">98</div><div class="line number99 index98 alt2">99</div><div class="line number100 index99 alt1">100</div><div class="line number101 index100 alt2">101</div><div class="line number102 index101 alt1">102</div><div class="line number103 index102 alt2">103</div><div class="line number104 index103 alt1">104</div><div class="line number105 index104 alt2">105</div><div class="line number106 index105 alt1">106</div><div class="line number107 index106 alt2">107</div><div class="line number108 index107 alt1">108</div><div class="line number109 index108 alt2">109</div><div class="line number110 index109 alt1">110</div><div class="line number111 index110 alt2">111</div><div class="line number112 index111 alt1">112</div><div class="line number113 index112 alt2">113</div><div class="line number114 index113 alt1">114</div><div class="line number115 index114 alt2">115</div><div class="line number116 index115 alt1">116</div><div class="line number117 index116 alt2">117</div><div class="line number118 index117 alt1">118</div><div class="line number119 index118 alt2">119</div><div class="line number120 index119 alt1">120</div><div class="line number121 index120 alt2">121</div><div class="line number122 index121 alt1">122</div><div class="line number123 index122 alt2">123</div><div class="line number124 index123 alt1">124</div><div class="line number125 index124 alt2">125</div><div class="line number126 index125 alt1">126</div><div class="line number127 index126 alt2">127</div><div class="line number128 index127 alt1">128</div><div class="line number129 index128 alt2">129</div><div class="line number130 index129 alt1">130</div><div class="line number131 index130 alt2">131</div><div class="line number132 index131 alt1">132</div><div class="line number133 index132 alt2">133</div><div class="line number134 index133 alt1">134</div><div class="line number135 index134 alt2">135</div><div class="line number136 index135 alt1">136</div><div class="line number137 index136 alt2">137</div><div class="line number138 index137 alt1">138</div><div class="line number139 index138 alt2">139</div><div class="line number140 index139 alt1">140</div><div class="line number141 index140 alt2">141</div><div class="line number142 index141 alt1">142</div><div class="line number143 index142 alt2">143</div><div class="line number144 index143 alt1">144</div><div class="line number145 index144 alt2">145</div><div class="line number146 index145 alt1">146</div><div class="line number147 index146 alt2">147</div><div class="line number148 index147 alt1">148</div><div class="line number149 index148 alt2">149</div><div class="line number150 index149 alt1">150</div><div class="line number151 index150 alt2">151</div><div class="line number152 index151 alt1">152</div><div class="line number153 index152 alt2">153</div><div class="line number154 index153 alt1">154</div><div class="line number155 index154 alt2">155</div><div class="line number156 index155 alt1">156</div><div class="line number157 index156 alt2">157</div><div class="line number158 index157 alt1">158</div><div class="line number159 index158 alt2">159</div><div class="line number160 index159 alt1">160</div><div class="line number161 index160 alt2">161</div><div class="line number162 index161 alt1">162</div><div class="line number163 index162 alt2">163</div><div class="line number164 index163 alt1">164</div><div class="line number165 index164 alt2">165</div><div class="line number166 index165 alt1">166</div><div class="line number167 index166 alt2">167</div><div class="line number168 index167 alt1">168</div><div class="line number169 index168 alt2">169</div><div class="line number170 index169 alt1">170</div><div class="line number171 index170 alt2">171</div><div class="line number172 index171 alt1">172</div><div class="line number173 index172 alt2">173</div><div class="line number174 index173 alt1">174</div><div class="line number175 index174 alt2">175</div><div class="line number176 index175 alt1">176</div><div class="line number177 index176 alt2">177</div><div class="line number178 index177 alt1">178</div><div class="line number179 index178 alt2">179</div><div class="line number180 index179 alt1">180</div><div class="line number181 index180 alt2">181</div><div class="line number182 index181 alt1">182</div><div class="line number183 index182 alt2">183</div><div class="line number184 index183 alt1">184</div><div class="line number185 index184 alt2">185</div><div class="line number186 index185 alt1">186</div><div class="line number187 index186 alt2">187</div><div class="line number188 index187 alt1">188</div><div class="line number189 index188 alt2">189</div><div class="line number190 index189 alt1">190</div><div class="line number191 index190 alt2">191</div><div class="line number192 index191 alt1">192</div><div class="line number193 index192 alt2">193</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="c comments">/*&nbsp;Minimum&nbsp;Linux&nbsp;Character&nbsp;Driver&nbsp;Demo</code></div><div class="line number2 index1 alt1"><code class="c spaces">&nbsp;</code><code class="c comments">*</code></div><div class="line number3 index2 alt2"><code class="c spaces">&nbsp;</code><code class="c comments">*&nbsp;This&nbsp;is&nbsp;a&nbsp;character&nbsp;driver,&nbsp;which&nbsp;is&nbsp;used&nbsp;to&nbsp;demostrate&nbsp;Linux&nbsp;character&nbsp;driver's&nbsp;structure</code></div><div class="line number4 index3 alt1"><code class="c spaces">&nbsp;</code><code class="c comments">*/</code></div><div class="line number5 index4 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number6 index5 alt1"><code class="c comments">/*&nbsp;Main&nbsp;header&nbsp;files&nbsp;*/</code></div><div class="line number7 index6 alt2"><code class="c preprocessor">#include&nbsp;&lt;linux/init.h&gt;</code></div><div class="line number8 index7 alt1"><code class="c preprocessor">#include&nbsp;&lt;linux/module.h&gt;</code></div><div class="line number9 index8 alt2"><code class="c comments">/*&nbsp;Useful&nbsp;header&nbsp;files&nbsp;*/</code></div><div class="line number10 index9 alt1"><code class="c preprocessor">#include&nbsp;&lt;linux/kernel.h&gt;</code></div><div class="line number11 index10 alt2"><code class="c preprocessor">#include&nbsp;&lt;linux/fs.h&gt;</code></div><div class="line number12 index11 alt1"><code class="c preprocessor">#include&nbsp;&lt;mach/gpio.h&gt;</code></div><div class="line number13 index12 alt2"><code class="c preprocessor">#include&nbsp;&lt;plat/gpio-cfg.h&gt;</code></div><div class="line number14 index13 alt1"><code class="c preprocessor">#include&nbsp;&lt;linux/miscdevice.h&gt;</code></div><div class="line number15 index14 alt2"><code class="c preprocessor">#include&nbsp;&lt;linux/platform_device.h&gt;</code></div><div class="line number16 index15 alt1"><code class="c preprocessor">#include&nbsp;&lt;mach/regs-gpio.h&gt;</code></div><div class="line number17 index16 alt2"><code class="c preprocessor">#include&nbsp;&lt;asm/io.h&gt;</code></div><div class="line number18 index17 alt1"><code class="c preprocessor">#include&nbsp;&lt;linux/regulator/consumer.h&gt;</code></div><div class="line number19 index18 alt2"><code class="c preprocessor">#include&nbsp;&lt;linux/delay.h&gt;</code></div><div class="line number20 index19 alt1"><code class="c preprocessor">#include&nbsp;&lt;linux/cdev.h&gt;</code></div><div class="line number21 index20 alt2"><code class="c preprocessor">#include&nbsp;&lt;linux/device.h&gt;</code></div><div class="line number22 index21 alt1"><code class="c preprocessor">#include&nbsp;&lt;linux/uaccess.h&gt;</code></div><div class="line number23 index22 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number24 index23 alt1"><code class="c comments">/*&nbsp;Definitions,&nbsp;you&nbsp;can&nbsp;put&nbsp;them&nbsp;in&nbsp;a&nbsp;separated&nbsp;header(*.h)&nbsp;file&nbsp;and&nbsp;use&nbsp;#include&nbsp;"xxx.h"&nbsp;to&nbsp;include&nbsp;them&nbsp;*/</code></div><div class="line number25 index24 alt2"><code class="c comments">//DBGPRINT()&nbsp;is&nbsp;used&nbsp;to&nbsp;print&nbsp;debug&nbsp;messages,&nbsp;comment&nbsp;#define&nbsp;IS_IN_DEBUG&nbsp;to&nbsp;disable&nbsp;them</code></div><div class="line number26 index25 alt1"><code class="c preprocessor">#define&nbsp;IS_IN_DEBUG</code></div><div class="line number27 index26 alt2"><code class="c preprocessor">#ifdef&nbsp;IS_IN_DEBUG</code></div><div class="line number28 index27 alt1"><code class="c preprocessor">#define&nbsp;DBGPRINT(sInfo...)&nbsp;printk(KERN_INFO&nbsp;"MinimumCharDriver:&nbsp;"&nbsp;sInfo)</code></div><div class="line number29 index28 alt2"><code class="c preprocessor">#else</code></div><div class="line number30 index29 alt1"><code class="c preprocessor">#define&nbsp;DBGPRINT(sInfo...)</code></div><div class="line number31 index30 alt2"><code class="c preprocessor">#endif</code></div><div class="line number32 index31 alt1"><code class="c comments">//printk()&nbsp;in&nbsp;different&nbsp;levels</code></div><div class="line number33 index32 alt2"><code class="c preprocessor">#define&nbsp;NFOPRINT(sInfo...)&nbsp;printk(KERN_INFO&nbsp;"MinimumCharDriver:&nbsp;"&nbsp;sInfo)</code></div><div class="line number34 index33 alt1"><code class="c preprocessor">#define&nbsp;WRNPRINT(sInfo...)&nbsp;printk(KERN_WARNING&nbsp;"MinimumCharDriver:&nbsp;"&nbsp;sInfo)</code></div><div class="line number35 index34 alt2"><code class="c preprocessor">#define&nbsp;ERRPRINT(sInfo...)&nbsp;printk(KERN_ERR&nbsp;"MinimumCharDriver:&nbsp;"&nbsp;sInfo)</code></div><div class="line number36 index35 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number37 index36 alt2"><code class="c comments">//&nbsp;Name&nbsp;strings</code></div><div class="line number38 index37 alt1"><code class="c preprocessor">#define&nbsp;DRIVER_NAME&nbsp;"minimum-char-driver"</code></div><div class="line number39 index38 alt2"><code class="c preprocessor">#define&nbsp;NODE_NAME&nbsp;"minimum-char-driver"</code></div><div class="line number40 index39 alt1"><code class="c preprocessor">#define&nbsp;CLASS_NAME&nbsp;"minimum-char-driver-class"</code></div><div class="line number41 index40 alt2"><code class="c comments">/*&nbsp;End&nbsp;of&nbsp;definitions&nbsp;*/</code></div><div class="line number42 index41 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number43 index42 alt2"><code class="c keyword bold">struct</code>&nbsp;<code class="c keyword bold">class</code>&nbsp;<code class="c plain">*clsDriver;&nbsp;</code><code class="c comments">//Device&nbsp;node&nbsp;</code></div><div class="line number44 index43 alt1"><code class="c keyword bold">static</code>&nbsp;<code class="c color1 bold">int</code>&nbsp;<code class="c plain">iMajorDeviceNumber&nbsp;=&nbsp;0;&nbsp;</code><code class="c comments">//Set&nbsp;to&nbsp;0&nbsp;to&nbsp;allocate&nbsp;device&nbsp;number&nbsp;automatically</code></div><div class="line number45 index44 alt2"><code class="c keyword bold">static</code>&nbsp;<code class="c keyword bold">struct</code>&nbsp;<code class="c plain">cdev&nbsp;cdevDriver;&nbsp;</code><code class="c comments">//cdev&nbsp;structure</code></div><div class="line number46 index45 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number47 index46 alt2"><code class="c comments">/*&nbsp;Character&nbsp;Driver&nbsp;related&nbsp;functions&nbsp;*/</code></div><div class="line number48 index47 alt1"><code class="c color1 bold">int</code>&nbsp;<code class="c plain">minimum_char_driver_open(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">inode&nbsp;*&nbsp;lpNode,&nbsp;</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">file&nbsp;*&nbsp;lpFile){</code></div><div class="line number49 index48 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Device&nbsp;file&nbsp;opending...\n"</code><code class="c plain">);</code></div><div class="line number50 index49 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number51 index50 alt2"><code class="c plain">}</code></div><div class="line number52 index51 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number53 index52 alt2"><code class="c keyword bold">static</code>&nbsp;<code class="c color1 bold">int</code>&nbsp;<code class="c plain">minimum_char_driver_release&nbsp;(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">inode&nbsp;*&nbsp;lpNode,&nbsp;</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">file&nbsp;*&nbsp;lpFile){</code></div><div class="line number54 index53 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Device&nbsp;file&nbsp;closing...\n"</code><code class="c plain">);</code></div><div class="line number55 index54 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number56 index55 alt1"><code class="c plain">}</code></div><div class="line number57 index56 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number58 index57 alt1"><code class="c plain">ssize_t&nbsp;minimum_char_driver_read(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">file&nbsp;*&nbsp;lpFile,&nbsp;</code><code class="c color1 bold">char</code>&nbsp;<code class="c plain">__user&nbsp;*&nbsp;lpszBuffer,&nbsp;</code><code class="c color1 bold">size_t</code>&nbsp;<code class="c plain">iSize,&nbsp;loff_t&nbsp;*&nbsp;lpOffset){</code></div><div class="line number59 index58 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Reading&nbsp;data&nbsp;from&nbsp;device&nbsp;file...\n"</code><code class="c plain">);</code></div><div class="line number60 index59 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number61 index60 alt2"><code class="c plain">}</code></div><div class="line number62 index61 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number63 index62 alt2"><code class="c plain">ssize_t&nbsp;minimum_char_driver_write(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">file&nbsp;*&nbsp;lpFile,&nbsp;</code><code class="c keyword bold">const</code>&nbsp;<code class="c color1 bold">char</code>&nbsp;<code class="c plain">__user&nbsp;*&nbsp;lpszBuffer,&nbsp;</code><code class="c color1 bold">size_t</code>&nbsp;<code class="c plain">iSize,loff_t&nbsp;*&nbsp;lpOffset){</code></div><div class="line number64 index63 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Wrtiting&nbsp;data&nbsp;to&nbsp;device&nbsp;file...\n"</code><code class="c plain">);</code></div><div class="line number65 index64 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number66 index65 alt1"><code class="c plain">}</code></div><div class="line number67 index66 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number68 index67 alt1"><code class="c keyword bold">static</code>&nbsp;<code class="c color1 bold">long</code>&nbsp;<code class="c plain">minimum_char_driver_unlocked_ioctl(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">file&nbsp;*&nbsp;lpFile,&nbsp;unsigned&nbsp;</code><code class="c color1 bold">int</code>&nbsp;<code class="c plain">iIoControlCommand,&nbsp;unsigned&nbsp;</code><code class="c color1 bold">long</code>&nbsp;<code class="c plain">lpIoControlParameters){&nbsp;&nbsp;</code></div><div class="line number69 index68 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Unlocked&nbsp;IOControl&nbsp;command&nbsp;%u&nbsp;with&nbsp;argument&nbsp;%lu&nbsp;received.\n"</code><code class="c plain">,&nbsp;iIoControlCommand,&nbsp;lpIoControlParameters);</code></div><div class="line number70 index69 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number71 index70 alt2"><code class="c plain">}</code></div><div class="line number72 index71 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number73 index72 alt2"><code class="c comments">/*&nbsp;For&nbsp;kernels&nbsp;before&nbsp;2.6.36</code></div><div class="line number74 index73 alt1"><code class="c comments">static&nbsp;int&nbsp;minimum_char_driver_unlocked_ioctl(struct&nbsp;inode&nbsp;*&nbsp;lpNode,&nbsp;struct&nbsp;file&nbsp;*file,&nbsp;unsigned&nbsp;int&nbsp;iIoControlCommand,&nbsp;unsigned&nbsp;long&nbsp;lpIoControlParameters){&nbsp;&nbsp;</code></div><div class="line number75 index74 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">DBGPRINT("IOControl&nbsp;command&nbsp;%u&nbsp;with&nbsp;argument&nbsp;%lu&nbsp;received.\n",&nbsp;iIoControlCommand,&nbsp;lpIoControlParameters);</code></div><div class="line number76 index75 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">return&nbsp;0;</code></div><div class="line number77 index76 alt2"><code class="c comments">}</code></div><div class="line number78 index77 alt1"><code class="c comments">*/</code></div><div class="line number79 index78 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number80 index79 alt1"><code class="c keyword bold">static</code>&nbsp;<code class="c keyword bold">struct</code>&nbsp;<code class="c plain">file_operations&nbsp;minimum_char_driver_driver_file_operations&nbsp;=&nbsp;{</code></div><div class="line number81 index80 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.owner&nbsp;=&nbsp;THIS_MODULE,</code></div><div class="line number82 index81 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.open&nbsp;&nbsp;=&nbsp;minimum_char_driver_open,&nbsp;&nbsp;</code><code class="c comments">//Open&nbsp;device,&nbsp;executed&nbsp;when&nbsp;calling&nbsp;open()</code></div><div class="line number83 index82 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.release&nbsp;=&nbsp;minimum_char_driver_release,&nbsp;</code><code class="c comments">//Release&nbsp;device,&nbsp;executed&nbsp;when&nbsp;calling&nbsp;close()</code></div><div class="line number84 index83 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.read&nbsp;&nbsp;=&nbsp;minimum_char_driver_read,&nbsp;</code><code class="c comments">//Read&nbsp;operations,&nbsp;executed&nbsp;when&nbsp;calling&nbsp;read()</code></div><div class="line number85 index84 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.write&nbsp;=&nbsp;minimum_char_driver_write,&nbsp;</code><code class="c comments">//Write&nbsp;operations,&nbsp;executed&nbsp;when&nbsp;calling&nbsp;write()</code></div><div class="line number86 index85 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.unlocked_ioctl&nbsp;=&nbsp;minimum_char_driver_unlocked_ioctl,&nbsp;</code><code class="c comments">//Unlocked&nbsp;IOControl,&nbsp;executed&nbsp;when&nbsp;calling&nbsp;ioctl()</code></div><div class="line number87 index86 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//.ioctl&nbsp;=&nbsp;minimum_char_driver_ioctl,&nbsp;//For&nbsp;kernels&nbsp;before&nbsp;2.6.36,&nbsp;use&nbsp;.ioctl&nbsp;and&nbsp;comment&nbsp;.unlocked_ioctl</code></div><div class="line number88 index87 alt1"><code class="c plain">};</code></div><div class="line number89 index88 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number90 index89 alt1"><code class="c comments">/*&nbsp;Platform&nbsp;Device&nbsp;related&nbsp;functions&nbsp;*/</code></div><div class="line number91 index90 alt2"><code class="c keyword bold">static</code>&nbsp;<code class="c color1 bold">int</code>&nbsp;<code class="c plain">minimum_char_driver_probe(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">platform_device&nbsp;*&nbsp;lpPlatformDevice){</code></div><div class="line number92 index91 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Initializing...\n"</code><code class="c plain">);</code></div><div class="line number93 index92 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number94 index93 alt1"><code class="c plain">}</code></div><div class="line number95 index94 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number96 index95 alt1"><code class="c keyword bold">static</code>&nbsp;<code class="c color1 bold">int</code>&nbsp;<code class="c plain">minimum_char_driver_remove(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">platform_device&nbsp;*&nbsp;lpPlatformDevice){</code></div><div class="line number97 index96 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Removing...\n"</code><code class="c plain">);</code></div><div class="line number98 index97 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number99 index98 alt2"><code class="c plain">}</code></div><div class="line number100 index99 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number101 index100 alt2"><code class="c keyword bold">void</code>&nbsp;<code class="c plain">minimum_char_driver_shutdown(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">platform_device&nbsp;*&nbsp;lpPlatformDevice){</code></div><div class="line number102 index101 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Shutting&nbsp;down...\n"</code><code class="c plain">);</code></div><div class="line number103 index102 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code><code class="c plain">;</code></div><div class="line number104 index103 alt1"><code class="c plain">}</code></div><div class="line number105 index104 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number106 index105 alt1"><code class="c keyword bold">static</code>&nbsp;<code class="c color1 bold">int</code>&nbsp;<code class="c plain">minimum_char_driver_suspend(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">platform_device&nbsp;*&nbsp;lpPlatformDevice,&nbsp;pm_message_t&nbsp;iState){</code></div><div class="line number107 index106 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Suspending...\n"</code><code class="c plain">);</code></div><div class="line number108 index107 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number109 index108 alt2"><code class="c plain">}</code></div><div class="line number110 index109 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number111 index110 alt2"><code class="c keyword bold">static</code>&nbsp;<code class="c color1 bold">int</code>&nbsp;<code class="c plain">minimum_char_driver_resume(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">platform_device&nbsp;*&nbsp;lpPlatformDevice){</code></div><div class="line number112 index111 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"Resuming...\n"</code><code class="c plain">);</code></div><div class="line number113 index112 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number114 index113 alt1"><code class="c plain">}</code></div><div class="line number115 index114 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number116 index115 alt1"><code class="c comments">/*&nbsp;Init&nbsp;&amp;&nbsp;Exit&nbsp;functions&nbsp;*/</code></div><div class="line number117 index116 alt2"><code class="c keyword bold">static</code>&nbsp;<code class="c keyword bold">void</code>&nbsp;<code class="c plain">minimum_char_driver_setup_cdev(</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">cdev&nbsp;*&nbsp;lpCharDevice,&nbsp;</code><code class="c color1 bold">int</code>&nbsp;<code class="c plain">iMinorDeviceNumber,&nbsp;</code><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">file_operations&nbsp;*&nbsp;lpFileOperations){&nbsp;</code><code class="c comments">//Device&nbsp;setup&nbsp;function,&nbsp;called&nbsp;by&nbsp;init()</code></div><div class="line number118 index117 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code>&nbsp;<code class="c plain">iError,&nbsp;iDeviceDeviceNumber&nbsp;=&nbsp;MKDEV(iMajorDeviceNumber,&nbsp;iMinorDeviceNumber);</code></div><div class="line number119 index118 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">cdev_init(lpCharDevice,&nbsp;lpFileOperations);&nbsp;</code><code class="c comments">//Initialize&nbsp;cdev</code></div><div class="line number120 index119 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">lpCharDevice-&gt;owner&nbsp;=&nbsp;THIS_MODULE;</code></div><div class="line number121 index120 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">lpCharDevice-&gt;ops&nbsp;=&nbsp;lpFileOperations;</code></div><div class="line number122 index121 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">iError&nbsp;=&nbsp;cdev_add(lpCharDevice,&nbsp;iDeviceDeviceNumber,&nbsp;1);</code></div><div class="line number123 index122 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code>&nbsp;<code class="c plain">(iError){</code></div><div class="line number124 index123 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">WRNPRINT(</code><code class="c string">"Error&nbsp;%d&nbsp;adding&nbsp;device&nbsp;&nbsp;%d.\n"</code><code class="c plain">,&nbsp;iError,&nbsp;iMinorDeviceNumber);</code></div><div class="line number125 index124 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number126 index125 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">NFOPRINT(</code><code class="c string">"Device&nbsp;setup&nbsp;process&nbsp;finished.\n"</code><code class="c plain">);</code></div><div class="line number127 index126 alt2"><code class="c plain">}</code></div><div class="line number128 index127 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number129 index128 alt2"><code class="c keyword bold">static</code>&nbsp;<code class="c color1 bold">int</code>&nbsp;<code class="c plain">__init&nbsp;minimum_char_driver_init(</code><code class="c keyword bold">void</code><code class="c plain">){</code></div><div class="line number130 index129 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">NFOPRINT(</code><code class="c string">"Initializing...\n"</code><code class="c plain">);</code></div><div class="line number131 index130 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c color1 bold">int</code>&nbsp;<code class="c plain">iResult;</code></div><div class="line number132 index131 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">dev_t&nbsp;dev&nbsp;=&nbsp;MKDEV(iMajorDeviceNumber,&nbsp;0);</code></div><div class="line number133 index132 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code>&nbsp;<code class="c plain">(iMajorDeviceNumber){</code></div><div class="line number134 index133 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//Static&nbsp;device&nbsp;number</code></div><div class="line number135 index134 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">iResult&nbsp;=&nbsp;register_chrdev_region(dev,&nbsp;1,&nbsp;DRIVER_NAME);</code></div><div class="line number136 index135 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"register_chrdev_region().\n"</code><code class="c plain">);</code></div><div class="line number137 index136 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number138 index137 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">else</code><code class="c plain">{</code></div><div class="line number139 index138 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//Allocate&nbsp;device&nbsp;number</code></div><div class="line number140 index139 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">iResult&nbsp;=&nbsp;alloc_chrdev_region(&amp;dev,&nbsp;0,&nbsp;1,&nbsp;DRIVER_NAME);</code></div><div class="line number141 index140 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"alloc_chrdev_region().\n"</code><code class="c plain">);</code></div><div class="line number142 index141 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">iMajorDeviceNumber&nbsp;=&nbsp;MAJOR(dev);</code></div><div class="line number143 index142 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number144 index143 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code>&nbsp;<code class="c plain">(iResult&nbsp;&lt;&nbsp;0){&nbsp;</code><code class="c comments">//Errors&nbsp;occurred</code></div><div class="line number145 index144 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">WRNPRINT(</code><code class="c string">"alloc_chrdev_region()&nbsp;failed.\n"</code><code class="c plain">);</code></div><div class="line number146 index145 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">iResult;</code></div><div class="line number147 index146 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number148 index147 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">minimum_char_driver_setup_cdev(&amp;cdevDriver,&nbsp;0,&nbsp;&amp;minimum_char_driver_driver_file_operations);</code></div><div class="line number149 index148 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">DBGPRINT(</code><code class="c string">"The&nbsp;major&nbsp;device&nbsp;number&nbsp;of&nbsp;this&nbsp;device&nbsp;is&nbsp;%d.\n"</code><code class="c plain">,&nbsp;iMajorDeviceNumber);</code></div><div class="line number150 index149 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//Use&nbsp;request_irq()&nbsp;to&nbsp;register&nbsp;interrupts&nbsp;here</code></div><div class="line number151 index150 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number152 index151 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//Create&nbsp;device&nbsp;node</code></div><div class="line number153 index152 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">clsDriver&nbsp;=&nbsp;class_create(THIS_MODULE,&nbsp;CLASS_NAME);</code></div><div class="line number154 index153 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">if</code>&nbsp;<code class="c plain">(IS_ERR(clsDriver)){</code></div><div class="line number155 index154 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">WRNPRINT(</code><code class="c string">"failed&nbsp;in&nbsp;creating&nbsp;device&nbsp;class.\n"</code><code class="c plain">);</code></div><div class="line number156 index155 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number157 index156 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number158 index157 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">device_create(clsDriver,&nbsp;NULL,&nbsp;dev,&nbsp;NULL,&nbsp;NODE_NAME);</code></div><div class="line number159 index158 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code>&nbsp;<code class="c plain">0;</code></div><div class="line number160 index159 alt1"><code class="c plain">}</code></div><div class="line number161 index160 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number162 index161 alt1"><code class="c keyword bold">static</code>&nbsp;<code class="c keyword bold">void</code>&nbsp;<code class="c plain">__exit&nbsp;minimum_char_driver_exit(</code><code class="c keyword bold">void</code><code class="c plain">){</code></div><div class="line number163 index162 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">NFOPRINT(</code><code class="c string">"Exiting...\n"</code><code class="c plain">);</code></div><div class="line number164 index163 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">device_destroy(clsDriver,MKDEV(iMajorDeviceNumber,&nbsp;0));</code></div><div class="line number165 index164 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">class_destroy(clsDriver);</code></div><div class="line number166 index165 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">cdev_del(&amp;cdevDriver);</code></div><div class="line number167 index166 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">unregister_chrdev_region(MKDEV(iMajorDeviceNumber,&nbsp;0),&nbsp;1);</code></div><div class="line number168 index167 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//Use&nbsp;free_irq()&nbsp;to&nbsp;unregister&nbsp;interrupts&nbsp;here</code></div><div class="line number169 index168 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number170 index169 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c keyword bold">return</code><code class="c plain">;</code></div><div class="line number171 index170 alt2"><code class="c plain">}</code></div><div class="line number172 index171 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number173 index172 alt2"><code class="c comments">/*&nbsp;Init&nbsp;function&nbsp;&amp;&nbsp;Exit&nbsp;function&nbsp;*/</code></div><div class="line number174 index173 alt1"><code class="c plain">module_init(minimum_char_driver_init);</code></div><div class="line number175 index174 alt2"><code class="c plain">module_exit(minimum_char_driver_exit);</code></div><div class="line number176 index175 alt1"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number177 index176 alt2"><code class="c comments">/*&nbsp;Platform&nbsp;Driver&nbsp;related&nbsp;functions&nbsp;*/</code></div><div class="line number178 index177 alt1"><code class="c keyword bold">struct</code>&nbsp;<code class="c plain">platform_driver&nbsp;minimum_char_driver_driver&nbsp;=&nbsp;{</code></div><div class="line number179 index178 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.probe&nbsp;=&nbsp;minimum_char_driver_probe,</code></div><div class="line number180 index179 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.</code><code class="c functions bold">remove</code>&nbsp;<code class="c plain">=&nbsp;minimum_char_driver_remove,</code></div><div class="line number181 index180 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.shutdown&nbsp;=&nbsp;minimum_char_driver_shutdown,</code></div><div class="line number182 index181 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.suspend&nbsp;=&nbsp;minimum_char_driver_suspend,</code></div><div class="line number183 index182 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.resume&nbsp;=&nbsp;minimum_char_driver_resume,</code></div><div class="line number184 index183 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.driver&nbsp;=&nbsp;{</code></div><div class="line number185 index184 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">.name&nbsp;=&nbsp;DRIVER_NAME</code></div><div class="line number186 index185 alt1"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c comments">//.owner&nbsp;=&nbsp;THIS_MODULE</code></div><div class="line number187 index186 alt2"><code class="c spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="c plain">}</code></div><div class="line number188 index187 alt1"><code class="c plain">};</code></div><div class="line number189 index188 alt2"><code class="c spaces">&nbsp;</code>&nbsp;</div><div class="line number190 index189 alt1"><code class="c comments">/*&nbsp;Licenses,&nbsp;Authors&nbsp;&amp;&nbsp;Descriptions&nbsp;*/</code></div><div class="line number191 index190 alt2"><code class="c plain">MODULE_LICENSE(</code><code class="c string">"Dual&nbsp;BSD/GPL"</code><code class="c plain">);</code></div><div class="line number192 index191 alt1"><code class="c plain">MODULE_AUTHOR(</code><code class="c string">"Picsell-Dois@SEU-BME"</code><code class="c plain">);</code></div><div class="line number193 index192 alt2"><code class="c plain">MODULE_DESCRIPTION(</code><code class="c string">"Minimum&nbsp;Linux&nbsp;character&nbsp;driver&nbsp;demo"</code><code class="c plain">);</code></div></div></td></tr></tbody></table></div></div>
[[/html]]