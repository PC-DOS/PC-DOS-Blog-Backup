迅为iTop-4412的Linux内核源代码根目录（即{{config_for_@@****@@}}文件存放的位置）并没有放置{{.gitignore}}文件，如果需要进行版本控制，那么建议手动添加一个{{.gitignore}}文件以排除编译过程中产生的尺寸较大的临时文件。

 笔者的Linux内核源代码位于{{/home/picsell-dois/iTop4412/LinuxKernel/iTop4412_Kernel_3.0}}目录中。以下操作建议在调用{{git init}}指令初始化仓库前完成。

 启动终端，输入以下指令：

[[code]]
 cd /home/picsell-dois/iTop4412/LinuxKernel/iTop4412_Kernel_3.0
 gedit .gitignore
 [[/code]]

在打开的编辑器窗口的编辑框中输入以下内容，保存并退出编辑器：

[[code]]
 .tmp_kallsyms1.o
 ..tmp_kallsyms1.o.cmd
 .tmp_kallsyms1.S
 .tmp_kallsyms2.o
 ..tmp_kallsyms2.o.cmd
 .tmp_kallsyms2.S
 .tmp_System.map
 .tmp_versions
 .tmp_vmlinux1
 ..tmp_vmlinux1.cmd
 .tmp_vmlinux2
 ..tmp_vmlinux2.cmd
 .vmlinux.cmd
 vmlinux.o
 .vmlinux.o.cmd
 vmlinux
 [[/code]]

随后，依次执行{{git init}}指令初始化仓库、{{git add .}}指令添加文件追踪并进一步执行提交和推送即可。

-----

如果已经初始化了仓库，那么需要执行{{git rm}}指令停止Git对这些文件的追踪：

[[code]]
 git rm --cache .tmp_kallsyms1.o
 git rm --cache ..tmp_kallsyms1.o.cmd
 git rm --cache .tmp_kallsyms1.S
 git rm --cache .tmp_kallsyms2.o
 git rm --cache ..tmp_kallsyms2.o.cmd
 git rm --cache .tmp_kallsyms2.S
 git rm --cache .tmp_System.map
 git rm --cache .tmp_versions
 git rm --cache .tmp_vmlinux1
 git rm --cache ..tmp_vmlinux1.cmd
 git rm --cache .tmp_vmlinux2
 git rm --cache ..tmp_vmlinux2.cmd
 git rm --cache .vmlinux.cmd
 git rm --cache vmlinux.o
 git rm --cache .vmlinux.o.cmd
 git rm --cache vmlinux
 [[/code]]

请注意，如果您需要向GitHub提交您的代码，仍然建议先建立{{.gitignore}}，再建立仓库和推送。 